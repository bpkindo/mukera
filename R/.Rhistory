install.packages("rstudioapi")
library(devtools, roxygen2, rstudioapi)
library(devtools, roxygen2, rstudioapi)
library(rstudioapi)
library(devtools, roxygen2)
devtools::install_github("bpkindo/mpbart")
set.seed(64)
library(mpbart)
p=3
train_wave = mlbench.waveform(300)
test_wave = mlbench.waveform(500)
traindata = data.frame(train_wave$x, y = train_wave$classes)
testdata = data.frame(test_wave$x, y = test_wave$classes)
n = nrow(traindata)
testn = nrow(testdata)
X = traindata[,1:21]
X = data.frame(X)
testX = testdata[,1:21]
testX = data.frame(testX)
sigma0 = diag(p-1)
burn = 100
ndraws = 1000
Mcmc1=list(sigma0=sigma0, burn = burn, ndraws = ndraws)
Prior1 = list(nu=p+2,
V=(p+2)*diag(p-1),
ntrees = 100,
kfac = 2.0,
pbd = 1.0,
pb = 0.5,
alpha = 0.99,
beta =  2.0,
nc = 200,
priorindep = FALSE)
XEx <- NULL;
for(i in 1:nrow(X)){
XEx <- rbind(XEx, matrix(rep(X[i,], p-1), byrow = T, ncol = ncol(X) ) )
}
testXEx <- NULL;
for(i in 1:nrow(testX)){
testXEx <- rbind(testXEx, matrix(rep(testX[i,], p-1), byrow = T, ncol = ncol(testX) ) )
}
Data1 = list(p=p,y=traindata$y,X= XEx)
testData1 = list(p=p,y=testdata$y,X= testXEx)
out=rmpbart(Data=Data1, testData = testData1,
Prior = Prior1, Mcmc=Mcmc1, seedvalue = 99)
library(bayesm)
library(mlbench)
library(devtools)
devtools::install_github("bpkindo/mpbart")
set.seed(64)
library(mpbart)
p=3
train_wave = mlbench.waveform(300)
test_wave = mlbench.waveform(500)
traindata = data.frame(train_wave$x, y = train_wave$classes)
testdata = data.frame(test_wave$x, y = test_wave$classes)
n = nrow(traindata)
testn = nrow(testdata)
X = traindata[,1:21]
X = data.frame(X)
testX = testdata[,1:21]
testX = data.frame(testX)
sigma0 = diag(p-1)
burn = 100
ndraws = 1000
Mcmc1=list(sigma0=sigma0, burn = burn, ndraws = ndraws)
Prior1 = list(nu=p+2,
V=(p+2)*diag(p-1),
ntrees = 100,
kfac = 2.0,
pbd = 1.0,
pb = 0.5,
alpha = 0.99,
beta =  2.0,
nc = 200,
priorindep = FALSE)
XEx <- NULL;
for(i in 1:nrow(X)){
XEx <- rbind(XEx, matrix(rep(X[i,], p-1), byrow = T, ncol = ncol(X) ) )
}
testXEx <- NULL;
for(i in 1:nrow(testX)){
testXEx <- rbind(testXEx, matrix(rep(testX[i,], p-1), byrow = T, ncol = ncol(testX) ) )
}
Data1 = list(p=p,y=traindata$y,X= XEx)
testData1 = list(p=p,y=testdata$y,X= testXEx)
out=rmpbart(Data=Data1, testData = testData1,
Prior = Prior1, Mcmc=Mcmc1, seedvalue = 99)
library(bayesm)
library(mlbench)
library(devtools)
devtools::install_github("bpkindo/mpbart")
set.seed(64)
set.seed(64)
library(mpbart)
p=3
train_wave = mlbench.waveform(300)
test_wave = mlbench.waveform(500)
traindata = data.frame(train_wave$x, y = train_wave$classes)
testdata = data.frame(test_wave$x, y = test_wave$classes)
n = nrow(traindata)
testn = nrow(testdata)
X = traindata[,1:21]
X = data.frame(X)
testX = testdata[,1:21]
testX = data.frame(testX)
sigma0 = diag(p-1)
burn = 100
ndraws = 1000
Mcmc1=list(sigma0=sigma0, burn = burn, ndraws = ndraws)
Prior1 = list(nu=p+2,
V=(p+2)*diag(p-1),
ntrees = 100,
kfac = 2.0,
pbd = 1.0,
pb = 0.5,
alpha = 0.99,
beta =  2.0,
nc = 200,
priorindep = FALSE)
XEx <- NULL;
for(i in 1:nrow(X)){
XEx <- rbind(XEx, matrix(rep(X[i,], p-1), byrow = T, ncol = ncol(X) ) )
}
testXEx <- NULL;
for(i in 1:nrow(testX)){
testXEx <- rbind(testXEx, matrix(rep(testX[i,], p-1), byrow = T, ncol = ncol(testX) ) )
}
Data1 = list(p=p,y=traindata$y,X= XEx)
testData1 = list(p=p,y=testdata$y,X= testXEx)
out = mpbart(Data=Data1, testData = testData1,
Prior = Prior1, Mcmc=Mcmc1, seedvalue = 99)
library(bayesm)
library(mlbench)
library(devtools)
devtools::install_github("bpkindo/mpbart")
set.seed(64)
library(mpbart)
rmpbart
p=3
train_wave = mlbench.waveform(300)
test_wave = mlbench.waveform(500)
traindata = data.frame(train_wave$x, y = train_wave$classes)
testdata = data.frame(test_wave$x, y = test_wave$classes)
x.train = data.frame(train_wave$x)
x.test = data.frame(test_wave$x)
y.train = train_wave$classes
sigma0 = diag(p-1)
burn = 100
ndraws = 1000
Mcmc1=list(sigma0=sigma0, burn = burn, ndraws = ndraws)
Prior1 = list(nu=p+2,
V=(p+2)*diag(p-1),
ntrees = 100,
kfac = 2.0,
pbd = 1.0,
pb = 0.5,
alpha = 0.99,
beta =  2.0,
nc = 200,
priorindep = FALSE)
out = rmpbart(x.train = x.train, y.train = y.train, x.test = x.test,
Prior = Prior1, Mcmc=Mcmc1, seedvalue = 99)
table(y.train, predicted_class_train)
table(y.train, out$predicted_class_train)
table(y.train==out$predicted_class_train)/sum(table(y.train==out$predicted_class_train))
table(test_wave$classes, out$predicted_class_test)
test_err <- sum(test_wave$classes !=predicted_class_test)/
sum(table(test_wave$classes==predicted_class_test))
test_err <- sum(test_wave$classes != out$predicted_class_test)/
sum(table(test_wave$classes == out$predicted_class_test))
cat("test error :", test_err )
devtools::install_github("bpkindo/mpbart")
library(mpbart)
mpbart
rmpbart
set.seed(64)
library(mpbart)
p=3
train_wave = mlbench.waveform(300)
test_wave = mlbench.waveform(500)
traindata = data.frame(train_wave$x, y = train_wave$classes)
testdata = data.frame(test_wave$x, y = test_wave$classes)
x.train = data.frame(train_wave$x)
x.test = data.frame(test_wave$x)
y.train = train_wave$classes
sigma0 = diag(p-1)
burn = 100
ndraws = 1000
Mcmc1=list(sigma0=sigma0, burn = burn, ndraws = ndraws)
Prior1 = list(nu=p+2,
V=(p+2)*diag(p-1),
ntrees = 100,
kfac = 2.0,
pbd = 1.0,
pb = 0.5,
alpha = 0.99,
beta =  2.0,
nc = 200,
priorindep = FALSE)
out = rmpbart(x.train = x.train, y.train = y.train, x.test = x.test,
Prior = Prior1, Mcmc=Mcmc1, seedvalue = 99)
#confusion matrix train
table(y.train, out$predicted_class_train)
table(y.train==out$predicted_class_train)/sum(table(y.train==out$predicted_class_train))
#confusion matrix test
table(test_wave$classes, out$predicted_class_test)
test_err <- sum(test_wave$classes != out$predicted_class_test)/
sum(table(test_wave$classes == out$predicted_class_test))
cat("test error :", test_err )
help(rmpbart)
install.packages("https://github.com/bpkindo/mpbart/mpbart_0.1.tar.gz", repos = NULL, type="source")
devtools::install_github("https://github.com/bpkindo/mpbart/mpbart_0.1.tar.gz", repos = NULL, type="source")
devtools::install_github("mpbart/mpbart_0.1.tar.gz")
library(mlbench)
#needed to download package from github.
library(devtools)
devtools::install_github("bpkindo/mpbart")
library(mlbench)
#needed to download package from github.
library(devtools)
devtools::install_github("bpkindo/mpbart")
library(devtools)
devtools::install_github("bpkindo/mpbart")
install.packages("RcppArmadillo")
install.packages("Rcpp")
install.packages("inline")
install.packages("rbenchmark")
setwd("C:/Users/Christine/Documents/rcpparmadillo_test")
setwd("C:/Users/Christine/Documents/rcpparmadillo_test")
library(devtools, roxygen2)
library(rstudioapi)
library(Rcpp)
library(RcppArmadillo)
RcppArmadillo.package.skeleton("mukera")
setwd("./mukera/R")
document()
document()
document()
document()
document()
